{"ast":null,"code":"var _jsxFileName = \"/Users/jphome/Documents/May-Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusButtons from \"./FocusButtons\";\nimport FocusInfo from \"./FocusInfo\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //Set Focus Duration, still needs implementation of !<5 and !>60\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [focusSeconds, setFocusSeconds] = useState(focusDuration * 60);\n  const [focusOn, setFocusOn] = useState(true); //Set Break Duration, !<1 !>15\n\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakSeconds, setBreakSeconds] = useState(breakDuration * 60); //Set Elapsed Time\n\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    console.log({\n      elapsedTime\n    });\n    setElapsedTime(elapsedTime + 1);\n    timerRun();\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n\n    if (focusSeconds === focusDuration * 60 && isTimerRunning === false) {\n      setFocusSeconds(focusDuration * 60);\n    }\n\n    if (breakSeconds === breakDuration * 60 && isTimerRunning === false) {\n      setBreakSeconds(breakDuration * 60);\n    }\n\n    if (isTimerRunning === true) {\n      console.log(\"paused\");\n      disableTimerBtns();\n    } else if (isTimerRunning === false) {\n      console.log(\"timer is running\");\n      disableTimerBtns();\n      enableStopButton();\n    }\n  }\n\n  const timerRun = () => {\n    runFocusSession();\n  }; //ONSTOP\n\n\n  const onStop = () => {\n    console.log(\"stop\");\n    setIsTimerRunning(false);\n    setFocusOn(true);\n    setFocusSeconds(focusDuration * 60);\n    setBreakSeconds(breakDuration * 60);\n    disableStopButton();\n    enableTimerButns(); //SessionInfo\n  };\n\n  function runFocusSession() {\n    if (focusSeconds > 0) {\n      setFocusSeconds(count => count - 1);\n    } else {\n      setFocusOn(false);\n\n      if (breakSeconds > 0) {\n        setBreakSeconds(count => count - 1);\n      } else {\n        console.log(\"Starting over\");\n        setFocusOn(true);\n        setFocusSeconds(focusDuration * 60);\n        setBreakSeconds(breakDuration * 60);\n      }\n    } //Progress Bar\n\n  } //Helper Functions\n\n\n  function enableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function disableTimerBtns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true);\n    }\n  } //Handler\n\n\n  useEffect(() => {\n    if (!isTimerRunning) {\n      setFocusSeconds(focusDuration * 60);\n      setBreakSeconds(breakDuration * 60);\n    }\n  }, [focusDuration, breakDuration]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FocusButtons, {\n    title: \"focus Duration\",\n    maxTime: 60,\n    minTime: 5,\n    diff: 5,\n    value: focusDuration,\n    onChange: setFocusDuration,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FocusButtons, {\n    title: \"Break Duration\",\n    maxTime: 15,\n    minTime: 1,\n    diff: 1,\n    value: breakDuration,\n    onChange: setBreakDuration,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary disabled\",\n    id: \"stopBtn\",\n    title: \"Stop the session\",\n    onClick: onStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"sessionIonfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FocusInfo, {\n    focusOn: focusOn,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    focusSeconds: focusSeconds,\n    breakSeconds: breakSeconds,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/jphome/Documents/May-Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","classNames","minutesToDuration","secondsToDuration","useInterval","FocusButtons","FocusInfo","Pomodoro","isTimerRunning","setIsTimerRunning","focusDuration","setFocusDuration","focusSeconds","setFocusSeconds","focusOn","setFocusOn","breakDuration","setBreakDuration","breakSeconds","setBreakSeconds","elapsedTime","setElapsedTime","console","log","timerRun","playPause","prevState","disableTimerBtns","enableStopButton","runFocusSession","onStop","disableStopButton","enableTimerButns","count","stopBtn","document","querySelector","classList","remove","add","getAttribute","timerBtns","querySelectorAll","btn","removeAttribute","setAttribute","oi"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport useInterval from \"../utils/useInterval\";\nimport FocusButtons from \"./FocusButtons\"\nimport FocusInfo from \"./FocusInfo\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  //Set Focus Duration, still needs implementation of !<5 and !>60\n  const [focusDuration,setFocusDuration] = useState(25);\n  const [focusSeconds, setFocusSeconds] = useState(focusDuration *60)\n  const [focusOn, setFocusOn] = useState(true);\n\n\n  //Set Break Duration, !<1 !>15\n  const [breakDuration, setBreakDuration] = useState(5)\n  const [breakSeconds, setBreakSeconds] = useState(breakDuration*60)\n\n  //Set Elapsed Time\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      console.log({elapsedTime})\n      setElapsedTime(elapsedTime + 1);\n      timerRun();\n\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    if (focusSeconds === focusDuration *60 && isTimerRunning===false){\n      setFocusSeconds(focusDuration *60);\n    }\n    if (breakSeconds===breakDuration * 60 && isTimerRunning===false){\n      setBreakSeconds(breakDuration *60)\n    } \n    if(isTimerRunning===true){\n      console.log(\"paused\");\n      disableTimerBtns();\n    }else if(isTimerRunning===false){\n      console.log(\"timer is running\")\n      disableTimerBtns();\n      enableStopButton();\n    }\n  }\n\n  const timerRun = ()=>{\n    runFocusSession();\n  }\n\n\n  //ONSTOP\n  const onStop = ()=>{\n    console.log(\"stop\");\n    setIsTimerRunning(false);\n    setFocusOn(true);\n    setFocusSeconds(focusDuration*60)\n    setBreakSeconds(breakDuration*60)\n    disableStopButton();\n    enableTimerButns();\n\n    //SessionInfo\n    \n  }\n\n  function runFocusSession(){\n    if(focusSeconds > 0){\n      setFocusSeconds((count)=> count -1 )\n    }else{\n      setFocusOn(false);\n      if (breakSeconds > 0){\n        setBreakSeconds((count)=> count -1 )\n      }else{\n        console.log(\"Starting over\");\n        setFocusOn(true);\n        setFocusSeconds(focusDuration *60 )\n        setBreakSeconds(breakDuration * 60 )\n\n      }\n    }\n    //Progress Bar\n  }\n\n\n\n\n\n  //Helper Functions\n\n  function enableStopButton(){\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n  function disableStopButton(){\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\",true);\n  }\n\n  function enableTimerButns(){\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns){\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n  function disableTimerBtns(){\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true)\n    }\n  }\n\n  //Handler\n  useEffect(()=>{\n    if(!isTimerRunning){\n      setFocusSeconds(focusDuration *60 )\n      setBreakSeconds(breakDuration *60 )\n    }\n  },[focusDuration,breakDuration])\n\n  \n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <FocusButtons\n            title=\"focus Duration\"\n            maxTime = {60}\n            minTime = {5}\n            diff = {5}\n            value ={focusDuration}\n            onChange = {setFocusDuration}\n            disabled = {isTimerRunning}\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n            <FocusButtons\n            title = \"Break Duration\"\n            maxTime ={15}\n            minTime = {1}\n            diff = {1}\n            value = {breakDuration}\n            onChange = {setBreakDuration}\n            disabled = {isTimerRunning}\n\n            />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary disabled\"\n              id = \"stopBtn\"\n              title=\"Stop the session\"\n              onClick = {onStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2 d-none\" id=\"sessionIonfo\">\n\n        <FocusInfo\n        focusOn={focusOn}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        focusSeconds={focusSeconds}\n        breakSeconds={breakSeconds}\n        isTimerRunning={isTimerRunning}\n        \n        \n        />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}