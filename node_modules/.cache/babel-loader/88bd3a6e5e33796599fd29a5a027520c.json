{"ast":null,"code":"var _jsxFileName = \"/Users/jphome/Documents/May-Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusInfo.jsx\";\nimport React from 'react';\nimport MainFocusTotals from './MainFocusTotals';\nimport TimeElapsed from './TimeElapsed';\nimport Audio from \"./Audio\";\nimport WhenPaused from \"./WhenPaused\";\nimport BlueBar from \"./BlueBar\";\n\nfunction FocusInfo({\n  focusOn,\n  focusDuration,\n  breakDuration,\n  focusSeconds,\n  breakSeconds,\n  isTimerRunning\n}) {\n  function showFocusInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  if (isTimerRunning) {\n    showFocusInfo();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MainFocusTotals, {\n    focusOn: focusOn,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimeElapsed, {\n    focusOn: focusOn,\n    focusSeconds: focusSeconds,\n    breakSeconds: breakSeconds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), \" \", \"remaining\"), /*#__PURE__*/React.createElement(Audio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(WhenPaused, {\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BlueBar, {\n    barWidth: barWidth,\n    ariaValue: ariaValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default FocusInfo;","map":{"version":3,"sources":["/Users/jphome/Documents/May-Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/FocusInfo.jsx"],"names":["React","MainFocusTotals","TimeElapsed","Audio","WhenPaused","BlueBar","FocusInfo","focusOn","focusDuration","breakDuration","focusSeconds","breakSeconds","isTimerRunning","showFocusInfo","sessionInfo","document","querySelector","classList","add","remove","progressBar","barWidth","ariaValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,SAAT,CAAmB;AACfC,EAAAA,OADe;AAEfC,EAAAA,aAFe;AAGfC,EAAAA,aAHe;AAIfC,EAAAA,YAJe;AAKfC,EAAAA,YALe;AAMfC,EAAAA;AANe,CAAnB,EAQE;AAGE,WAASC,aAAT,GAAwB;AACpB,UAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAApB;AACAF,IAAAA,WAAW,CAACG,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACAJ,IAAAA,WAAW,CAACG,SAAZ,CAAsBE,MAAtB,CAA6B,QAA7B;AACA,UAAMC,WAAW,GAAGL,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAApB;AACAI,IAAAA,WAAW,CAACH,SAAZ,CAAsBC,GAAtB,CAA0B,MAA1B;AACAE,IAAAA,WAAW,CAACH,SAAZ,CAAsBE,MAAtB,CAA6B,QAA7B;AACH;;AAED,MAAIP,cAAJ,EAAmB;AACfC,IAAAA,aAAa;AAChB;;AAID,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKK,GALL,cAVF,eAkBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAmBE,oBAAC,UAAD;AAAY,IAAA,cAAc,EAAEC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CAFF,eAuBE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAES,QAAnB;AAA6B,IAAA,SAAS,EAAEC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADA;AA2BH;;AAED,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport MainFocusTotals from './MainFocusTotals';\nimport TimeElapsed from './TimeElapsed'\nimport Audio from \"./Audio\";\nimport WhenPaused from \"./WhenPaused\"\nimport BlueBar from \"./BlueBar\"\n\nfunction FocusInfo({\n    focusOn,\n    focusDuration,\n    breakDuration,\n    focusSeconds,\n    breakSeconds,\n    isTimerRunning,\n\n}){\n\n\n    function showFocusInfo(){\n        const sessionInfo = document.querySelector(\"#sessionInfo\");\n        sessionInfo.classList.add(\"d-block\");\n        sessionInfo.classList.remove(\"d-none\");\n        const progressBar = document.querySelector(\".progress\");\n        progressBar.classList.add(\"flex\");\n        progressBar.classList.remove(\"d-none\");\n    }\n\n    if (isTimerRunning){\n        showFocusInfo();\n    }\n\n\n\n    return (\n    <div>\n      {/* TODO: This area should show only when a focus or break session is running or pauses */}\n      <div className=\"col\">\n        {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n        <h2 data-testid=\"session-title\">\n          <MainFocusTotals\n            focusOn={focusOn}\n            focusDuration={focusDuration}\n            breakDuration={breakDuration}\n          />\n        </h2>\n        {/* TODO: Update message below to include time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          <TimeElapsed\n            focusOn={focusOn}\n            focusSeconds={focusSeconds}\n            breakSeconds={breakSeconds}\n          />{\" \"}\n          remaining\n        </p>\n        <Audio />\n        <WhenPaused isTimerRunning={isTimerRunning} />\n      </div>\n      <BlueBar barWidth={barWidth} ariaValue={ariaValue} />\n    </div>\n    )\n}\n\nexport default FocusInfo;\n\n"]},"metadata":{},"sourceType":"module"}